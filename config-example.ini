########################
# SYSTEM CONFIGURATION #
########################

### the path to your local Warcraft III directory
###  if absent, it tries to read the environment variable WAR3_HOME
###  it also may be automatically set up from the Windows registry,
###  or figured out from a list of common paths.
game.install_path =

### War 3 minor version
###  For 1.27a or b, just set it to 27
game.version =

### the path to the one directory where you keep your map files
###  (you should copy all your maps here)
###
###  Aura doesn't actually require map files (given map config paths exist), but some features do:
###  - Automatic calculation of map config values
###  - Transfer maps to players (behind option <hosting.map_transfers.mode>.)
###
### For WC3 versions less than or equal to 1.27b, you MAY want something like
### - C:\Program Files (x86)\Warcraft III\Maps\Downloads\
### - C:\Program Files (x86)\Warcraft III\Maps\Frozen Throne\
###
### It's recommended (mandatory for 1.28 or higher) to keep a maps folder independent from the game.
### Only one map path is allowed.
bot.maps_path = maps

### the path to the directory where you keep your custom map config files
bot.map_configs_path = mapcfgs

### the path to the directory where Aura automatically generates config files
##   it should be different from <bot.map_configs_path>
bot.map_cache_path = mapcache

### the path to the directory where the WC3 JASS files are stored
###  this directory contains common.j and blizzard.j (automatically extracted from MPQ files at game.install_path)
###  common.j and blizzard.j are required to host maps from .w3m, .w3x files, but Aura can host from existing map configs.
bot.jass_path = jass

### greeting that will be sent to players joining every game
###  contents are cached, use !reload to update them
bot.greeting_path = greeting.txt

### whether Aura should automatically delete maps after games start
bot.persistence.delete_huge_maps.enabled = no

### size of maps that makes them candidates to deletion (in KiB)
bot.persistence.delete_huge_maps.size = 204800

### the game frequency, in ms (10 fps or 10 Hz = 100 ms, 30 fps or 30 Hz = 33 ms)
###  this can always be changed for a particular game with the !latency command (which enforces a minimum of 10 and a maximum of 500)
bot.latency = 150

### performance threshold
###  if timers are delayed these many milliseconds, it means performance is suffering; log to console
bot.perf_limit = 200

### bot log level
##   this controls how detailed the bot output will be (notice, info, debug, trace)
bot.log_level = info

#########################
# NETWORK CONFIGURATION #
#########################

### the port Aura will host games on
net.host_port.only = 6113

### how does Aura know its own IPv4 and IPv6 addresses?
###  - api: sends a HTTP GET request to <net.*.public_address.value>, and the response body is expected to be the IP address in plain text.
###  - manual: type the bot ip address into <net.*.public_address.value>
###  - none: it doesn't know
###
### This information is used to check whether hosted games are accessible from the Internet,
### and provide hosting instructions for new bot users (!checknetwork).

net.ipv4.public_address.algorithm = api
net.ipv4.public_address.value = http://api.ipify.org

net.ipv6.public_address.algorithm = api
net.ipv6.public_address.value = http://api6.ipify.org
	 	
### a player is allowed to get behind up to these many keepalive frames
###  that's a max of <net.start_lag.sync_limit>*<bot.latency> (ms)
###  for constant time, <net.start_lag.sync_limit> is inversely proportional to <bot.latency>
###  this value can always be changed for a particular game with the !synclimit command
###
### if a player exceeds this limit, the game is paused to wait or vote to kick them
net.start_lag.sync_limit = 32

### stop the lag screen if a player is within <net.stop_lag.sync_limit> keepalive packets from expectation
net.stop_lag.sync_limit = 2

############################################
# SERVERS CONFIG (BATTLE.NET/PVPGN REALMS) #
############################################

###  <global_realm.* = ...> entries can be overriden for any particular server using <realm_X.* = ...>:

### your battle.net/PvPGN username
### you cannot use the same username here that you yourself use to login if you plan to login at the same time as your bot
global_realm.username = 

### default command trigger for PvPGN servers
global_realm.commands.trigger = .
global_realm.commands.broadcast.trigger = !

### whether to allow the !host, !map, !pub commands to non-admins in PvPGN servers
global_realm.allow_host_non_admins = yes

global_realm.announce_chat = yes

### whether we are listed under flood_immunity_users (or ghost_bots) in the PvPGN server settings (lua/config.lua)
global_realm.flood_immune = no

### The locale specifies the area of the world you are from
###  battle.net uses this to group players together, showing them games hosted by players and bots mostly from their own area
###  it's important to set this to the correct value to increase the effectiveness of the game refresher
###
### You can use the list at the following URL to get the correct value for your area:
###  http://web.archive.org/web/20090823040643/http://msdn.microsoft.com/en-us/library/0h88fahh(VS.85).aspx
###  put the decimal value here, e.g. 1031 is the default for "German - Germany"
global_realm.locale = 10250
global_realm.country_short = PE
global_realm.country = Peru

### Edit this section of the config file if you're connecting to a PVPGN server, such as EuroBattle
###
###  Server operators should provide you with the appropriate values.
###  You may also run BNCSUtil to know what to put in these fields.
###
###  Each server is likely to need a different set of auth_* values.
global_realm.auth_skip_version_check = yes
global_realm.auth_game_version = 27
global_realm.auth_exe_version = 173 1 27 1
global_realm.auth_exe_version_hash = 72 160 171 170
global_realm.auth_exe_info = war3.exe 15/03/16 00:00:00 515048
global_realm.auth_password_hash_type = pvpgn

### Playing in PvPGN realms often requires you to have a publicly reachable IPv4 address,
###  which is exactly the reason why host bots are popular. However, those are often
###  unavailable. Instead, you may tell them that they should contact you at another address,
###  which uses some techniques (tunneling) to mediate between you.
###
### You may find services and instructions to customize your IP address and port in the TUNNELING.md file.
global_realm.custom_ip_address.enabled = no
global_realm.custom_ip_address.value = 

global_realm.custom_port.enabled = no
global_realm.custom_port.value = 

##########################################
# SERVERS LIST (BATTLE.NET/PVPGN REALMS) #
##########################################

### Up to 240 servers supported.
###
### NOTE: Hot-reload may add new servers or update settings, but host update and deletion are not supported.
###  You may still set <realm_x.enabled = no> to disconnect the bot from an unwanted server.

### which battle.net server to connect to
### note that each banned player is tied to the realm it was created on and the realm is case sensitive
### so if you change your realm from useast.battle.net to USEAST.BATTLE.NET it'll still connect but anyone previously banned will not be counted as banned until you change it back
realm_1.host_name = latinbattle.com

###  this name will be used to identify the server in the Aura console
realm_1.unique_name = LatinBattle

### your battle.net password
realm_1.password = 

### the root admins on this server only
###  separate each name with a comma
realm_1.sudo_users = 
realm_1.admins = 

### automatically join this cannel
realm_1.first_channel = Warcraft 3 Frozen Throne

### override hosting.map_transfers.max_size for this server
realm_1.map_transfers.max_size = 3072
### drops the required permission level to use !host, map, !pub from admin to verified
realm_1.commands.custom_host.permissions = verified
realm_1.enabled = yes

realm_2.host_name = rubattle.net
realm_2.unique_name = RuBattle
realm_2.password = 
realm_2.sudo_users = 
realm_2.admins = 
realm_2.first_channel = Warcraft III ESP-1
realm_2.map_transfers.max_size = 3072
### drops the required permission level to use !host, map, !pub from admin to verified
realm_2.commands.custom_host.permissions = verified
realm_2.enabled = yes

realm_3.host_name = latinbattle.com
realm_3.unique_name = LatinBattleRadmin
realm_3.canonical_name = LatinBattle
realm_3.username = 
realm_3.password = 
realm_3.sudo_users = 
realm_3.admins = 
realm_3.first_channel = 1.27b
realm_3.custom_ip_address.value = 
realm_3.custom_port.value = 
realm_3.game_prefix = RAdmin. 
realm_3.mirror = yes
realm_3.vpn = yes
realm_3.enabled = no

realm_4.host_name = rubattle.net
realm_4.unique_name = RuBattleRadmin
realm_4.canonical_name = RuBattle
realm_4.username = 
realm_4.password = 
realm_4.sudo_users = 
realm_4.admins = 
realm_4.first_channel = The Void
realm_4.custom_ip_address.value = 
realm_4.custom_port.value = 
realm_4.game_prefix = RAdmin.
realm_4.mirror = yes
realm_4.vpn = yes
realm_4.enabled = no

realm_5.host_name = eurobattle.net
realm_5.unique_name = EuroBattle
realm_5.username = 
realm_5.password = 
realm_5.first_channel = The Void
realm_5.sudo_users = 
realm_5.admins =
realm_5.auth_game_version = 28
realm_5.auth_exe_version = 0 5 28 1
realm_5.auth_exe_version_hash = 201 63 116 96
realm_5.map_transfers.max_size = 3072
### drops the required permission level to use !host, map, !pub from admin to verified
realm_5.commands.custom_host.permissions = verified
realm_5.enabled = yes

realm_6.host_name = w3.usabattle.net
realm_6.unique_name = UsaBattle
realm_6.username = 
realm_6.password = 
realm_6.first_channel = The Void
realm_6.sudo_users =
realm_6.admins =
realm_6.auth_game_version = 28
realm_6.auth_exe_version = 0 5 28 1
realm_6.auth_exe_version_hash = 201 63 116 96
realm_6.map_transfers.max_size = 3072
### drops the required permission level to use !host, map, !pub from admin to verified
realm_6.commands.custom_host.permissions = verified
realm_6.enabled = yes

realm_7.host_name = w3league.net
realm_7.unique_name = W3League
realm_7.username = 
realm_7.password = 
realm_7.first_channel = Warcraft 3
realm_7.sudo_users = 
realm_7.admins = 
realm_7.map_transfers.max_size = 3072
### drops the required permission level to use !host, map, !pub from admin to verified
realm_7.commands.custom_host.permissions = verified
realm_7.enabled = yes

realm_8.host_name = 104.234.7.151
realm_8.unique_name = WorldEditors
realm_8.username = 
realm_8.password = 
realm_8.first_channel = Warcraft 3
realm_8.sudo_users = 
realm_8.admins = 
realm_8.map_transfers.max_size = 3072
realm_8.enabled = yes
# admin, rootadmin, user:X, nobody, everyone, auto, owner
### drops the required permission level to use !host, map, !pub from admin to verified
realm_8.commands.custom_host.permissions = verified
realm_8.commands.custom_host.permissions = 

############################################
# UDP CONFIGURATION ("Local Area Network") #
############################################

### Whether to listen to UDP traffic in port 6112
###  if this setting is enabled, War3 processes in the same machine may fail to connect to LAN or Battle.Net/PvPGN.
###
### Cannot be hot-reloaded
net.udp_server.enabled = no 

### If UDP server is disabled by <net.udp_server.enabled = no>, alternate port will be used for UDP traffic,
###  but only for outgoing traffic. That includes broadcasts.
###  You probably want anything between 6113 to 6119. Defaults to 6113. Use 0 for ANY free port.
net.udp_fallback.outbound_port = 6113

### For listening to UDP traffic both from IPv4 and IPv6.
net.udp_ipv6.enabled = yes

### It must not overlap with other ports already specified.
### Defaults to 6110.
net.udp_ipv6.port = 6110

### list clients outside the broadcast subnet (see section below) that you want to be able to find your games in the
###  "Local Area Network" menu.
###
### Note that, if they are using IPv4, and outside your LAN/VPN, they will need to perform UDP hole-punching between their own port 6112,
### and the host's UDP port (either 6112, or <net.udp_fallback.outbound_port>)
###
### again, you do NOT need to do this if you are in the same network (e.g. home/shared WiFi),
###  or using the same VPN software, or using IPv6, or connecting through a Battle.net / PvPGN realm.
###
### Hot reload doesn't affect the current lobby, but
### the current hosted lobby can have clients added with !addclient [IP], !delclient [IP]

net.game_discovery.udp.extra_clients.ip_addresses =

net.game_discovery.udp.extra_clients.strict = no

### WC3 clients expect UDP packets over IPv4 port 6112.
###  But <net.game_discovery.udp.extra_clients.ip_addresses> supports IPv6, which must use a different port.
###  UDP message through this port MUST be translated by your peer. See <net.game_discovery.udp.tcp6_custom_port.enabled>
net.game_discovery.udp.ipv6.target_port = 5678

### UDP broadcasts tell Warcraft clients that we host games at this port
###  However, this is NOT the port of the UDP server, but the reported port
###  for the game's TCP server, or possibly a reverse proxy.
###
### Defaults to `no`, which means that Aura broadcasts the actual port it binds to.
###
net.game_discovery.udp.tcp4_custom_port.enabled = no

### Defaults to 6112
###
net.game_discovery.udp.tcp4_custom_port.value = 6112

### If your IPv4 is behind a NAT and unable to perform port-forwarding, but you got a
###  globally routably IPv6 address <HOST IPv6 ADDRESS>, then you may leverage IPv6-to-4 translation to get
###  your lobby available under "Local Area Network" game list.
###
### Your peer must:
### - Setup a UDP reverse-proxy at 127.0.0.1:<net.game_discovery.udp.tcp6_custom_port.value>,
###   forwarding UDP traffic from <HOST IPv6 ADDRESS>:<net.game_discovery.udp.ipv6.port> to 127.0.0.1:6112.
###   When this is done correctly, your hosted games will be visible in the "Local Area Network",
###   but joining will fail without the next step.
###
### - Setup a TCP forward proxy at 127.0.0.1:<net.game_discovery.udp.tcp6_custom_port.value>,
###   connecting to <HOST IPv6 ADDRESS>:<net.host_port.only>
###   When this is donde correctly, your hosted games will be actually joinable in "Local Area Network".
###
net.game_discovery.udp.tcp6_custom_port.enabled = yes

### Defaults to 5678
###
net.game_discovery.udp.tcp6_custom_port.value = 5678

### the UDP "don't route" flag
###  this is only useful in very specific scenarios
###
### Cannot be hot-reloaded
net.game_discovery.udp.do_not_route = 0

############################################
# UDP BROADCAST ("Local Area Network")     #
############################################

### Can be hot-reloaded
net.game_discovery.udp.broadcast.enabled = yes

###  by default, the bot will let the operating system choose the network interface to which to send broadcasts,
###  but you can choose a custom interface; e.g. 192.168.1.255 to broadcast LAN games to the 192.168.1.x subnet
###
### only edit this if you have problems getting people to discover your hosted game
net.game_discovery.udp.broadcast.address = 

### Whether the bot should work like the War3 client by only sending hosted games' information to interested clients.
### Requires <net.udp_server.enabled = yes>
###
### If disabled, the bot will generate much more network traffic than necessary, but its outgoing messages will be
###  handled more easily by automated tools.
net.game_discovery.udp.broadcast.strict = yes

#####################
# UDP REDIRECT      #
#####################

### UDP redirect is a feature that lets Aura behave as a reverse-proxy for UDP traffic.
### If enabled, all UDP traffic received in port 6112 will be relayed to <net.udp_redirect.port> in an encapsulated format.
### Relayed packets start with f9 00, then 2 bytes (LE) for the size of the whole thing, then the sender IP address string, null-terminated,
### then 2 bytes (BE) for the sender port, then 4 bytes (BE) for the game version (actually 4 zeroes), then the actual UDP message we got.
### This format is not understood by the standard game client. Instead, it's meant for LANViewer.
###
net.udp_redirect.enabled = no

### redirport - anything except 6112
###
net.udp_redirect.ip_address = 127.0.0.1
net.udp_redirect.port = 6110

### If enabled, game lists sent by PvPGN servers will be relayed to <net.udp_redirect.port> using the same format.
### Note that the address is that of the PvPGN server, and the game version is actually defined (matches <game.version>)
### 
net.udp_redirect.realm_game_lists.enabled = yes

###############################################
# GPROXY CONFIGURATION (reconnection support) #
###############################################

### GProxy is a reconnection plugin for Warcraft III.
### It reconnects you automatically whenever you are disconnected from a game
### There are several versions available. These settings are for GProxyDLL,
### but GProxy++ is also supported by default.

### GProxy configuration
net.tcp_extensions.gproxy.enabled = yes

### Let more people use GProxyDLL
net.tcp_extensions.gproxy.announce_chat = yes

net.tcp_extensions.gproxy.site = https://www.mymgn.com/gproxy/

### the maximum number of minutes to wait for a GProxyDLL client to reconnect to the game	(min 1, max 10)
net.tcp_extensions.gproxy.reconnect_wait = 5

#######################
# LOBBY CONFIGURATION #
#######################

### beeps if a player joins
ui.notify_joins.enabled = yes

### except if they are named as follows (comma-separated names)
ui.notify_joins.exceptions =

### sets default host counter
hosting.namepace.first_game_id = 100

### command trigger for hosted games only (battle.net/PvPGN command triggers are defined later)
hosting.commands.trigger = .
hosting.commands.broadcast.trigger = !

### the bot's virtual host name as it appears in the game lobby - accepts colour codes (|cHEX|r)
###  cannot be longer than 15 characters
hosting.index.creator_name = aurabot

### Name to display in the chat of a game room
###  cannot be longer than 15 characters
hosting.self.virtual_player.name = aurabot

### whether to allow websites in !map, or !host
hosting.map_downloads.enabled = yes

### whether to allow map transfers from the bot to players in game lobbies or not
###  never: disable map transfers
###  auto: enable automatic map transfers
###  manual: the game owner must start each map transfer with the !dl command
hosting.map_transfers.mode = auto

### the maximum number of players allowed to download the map at the same time
hosting.map_transfers.max_players = 6

### the maximum combined download speed of all players downloading the map (in KB/sec)
hosting.map_transfers.max_speed = 20480

### the maximum map size we are willing to send (in KB/sec)
###  larger maps may still be sent with the !dl command
###
### overriden by <global_realm.map_transfers.max_size> (unless LAN)
### value 0 is ignored (set hosting.map_transfers.mode = 0 instead)
hosting.map_transfers.max_size = 131072

### whether to disable pings while uploading maps to players
net.has_buffer_bloat = yes

### use roundtrip time (RTT) for ping values (default: half of it, aka "LC style pings")
metrics.rtt_pings = no

### warn on players with ping greater or equal
hosting.high_ping.warn_ms = 200

### auto kick players with ping greater or equal
hosting.high_ping.kick_ms = 350

### automatically close the game lobby if an owner doesn't join it for this many minutes
hosting.abandoned_lobby.game_expiry_time = 45

### automatically remove owners absent for more than these many minutes
###  this only applies for owners joining from a pvpgn realm, since those
###  joining from LAN will get removed as soon as they leave the room,
###  to avoid impersonation
hosting.abandoned_lobby.owner_expiry_time = 5

#####################
# GAME CONFIGURATION #
#####################

### maximum number of games to host at once
hosting.max_games = 20

### the game over timer will start when this number of human players in a game has been reached, defaults to 1
hosting.game_over.player_count = 1

### the percentage of players required to vote yes for a votekick to pass
###  the player starting the votekick is assumed to have voted yes and the player the votekick is started against is assumed to have voted no
###  the formula for calculating the number of votes needed is votes_needed = ceil( ( num_players - 1 ) * <hosting.vote_kick.min_percent> / 100 )
###  this means it will round UP the number of votes required
###  if you set it to 100 it will require 2/3, 3/4, 4/5, 5/6, 6/7, 7/8, 8/9, 9/10, 10/11, and 11/12 votes to pass
###  if you set it to 90 it will require 2/3, 3/4, 4/5, 5/6, 6/7, 7/8, 8/9, 9/10, 9/11, and 10/12 votes to pass
###  if you set it to 80 it will require 2/3, 3/4, 4/5, 4/6, 5/7, 6/8, 7/9, 8/10, 8/11, and 9/12 votes to pass
###  if you set it to 70 it will require 2/3, 3/4, 3/5, 4/6, 5/7, 5/8, 6/9, 7/10, 7/11, and 8/12 votes to pass
###  if you set it to 60 it will require 2/3, 2/4, 3/5, 3/6, 4/7, 5/8, 5/9, 6/10, 6/11, and 7/12 votes to pass
hosting.vote_kick.min_percent = 100

#####################
# IRC CONFIGURATION #
#####################

irc.enabled = no

### which irc server to connect to (ie. irc.quakenet.org)
irc.host_name = irc.quakenet.org

### the port Aura will use to connect to the irc server
###  a good range is between 6660 - 6669 (TCP) but not every server supports the whole range
###  the default port of most servers is 6667
###  SSL is not supported
irc.port = 6667

### bot irc nickname
###  you cannot use the same username here that you yourself use on irc
irc.nickname = 

### bot irc username (used also in authing with Q on QuakeNet)
irc.username = 

### bot QAuth password (NickServ not supported)
###  leave blank if you aren't connecting to QuakeNet or don't know what this is
irc.password = 

### the command trigger for IRC commands (one character only)
irc.commands.trigger = .
irc.commands.broadcast.trigger = !

### permissions required to use various commands from IRC
irc.commands.common.permissions = auto
irc.commands.hosting.permissions = auto
irc.commands.moderator.permissions = auto
irc.commands.admin.permissions = auto
irc.commands.bot_owner.permissions = auto
irc.commands.custom_host.permissions = unverified

### the channels Aura will join (comma-separated)
###  omit the # when inputing a channel
irc.channels = 

### irc root admins
###  defined using host_names
###  ie. Starrk.users.quakenet.org
###
### In QuakeNet, you must use use the "Log in to Q" option
###  in order to be asigned a users.quakenet.org host_name
irc.admins = 

### irc sudo users
###  defined using host_names
###  ie. Starrk.users.quakenet.org
###
irc.sudo_users =

### In QuakeNet, you must use use the "Log in to Q" option
###  in order to be asigned a users.quakenet.org host_name
###
### Without this option, anyone can impersonate you in IRC networks.
###  Note that IRC root admins / sudo users must match this domain.
irc.verified_domain = users.quakenet.org

##########################
# DATABASE CONFIGURATION #
##########################

### sqlite3 database configuration

db.storage_file = aura.dbs
